{
  "total_codes": 3,
  "detection_codes": [
    {
      "flag_value": 1,
      "detection_code": "df.loc[(df['Window Seat'].astype(str).str.strip().str.lower().isin(['true','t','yes','y','1']) & df['Aisle Seat'].astype(str).str.strip().str.lower().isin(['true','t','yes','y','1'])), 'flag_status'] |= 1",
      "explanation": "This code detects rows where both Window Seat and Aisle Seat are marked as True, indicating a contradictory situation where a seat is both a window seat and an aisle seat.",
      "test_description": "Test by checking rows where both Window Seat and Aisle Seat are marked as True. Ensure that the detection code correctly flags these rows.",
      "safety_notes": "Ensure that the boolean normalization is correctly applied to avoid missing any contradictory values. Verify that the detection code only flags rows where both Window Seat and Aisle Seat are True."
    },
    {
      "flag_value": 2,
      "detection_code": "df.loc[(pd.to_datetime(df['Departure Datetime'], errors='coerce') > pd.to_datetime(df['Arrival Datetime'], errors='coerce')) & df['Departure Datetime'].notna() & df['Arrival Datetime'].notna(), 'flag_status'] |= 2",
      "explanation": "This code detects rows where the Departure Datetime is after the Arrival Datetime, indicating a business logic violation.",
      "test_description": "Test by checking if the 'flag_status' column is updated to 2 for rows where Departure Datetime is after Arrival Datetime.",
      "safety_notes": "Ensure that the datetime columns are properly formatted and contain valid datetime values before running this detection code."
    },
    {
      "flag_value": 4,
      "detection_code": "df.loc[(pd.to_numeric(df['Layovers'], errors='coerce').fillna(0).astype(int) != df['Layover Locations'].fillna('').astype(str).apply(lambda x: len([i for i in re.split(r'[;,|>]|->', str(x)) if i.strip()]))), 'flag_status'] |= 4",
      "explanation": "Checks for mismatch between Layovers and Layover Locations",
      "test_description": "Create rows where Layovers does not equal number of items in Layover Locations",
      "safety_notes": "Handles missing values, multiple delimiters (;,|,>,->)."
    }
  ],
  "generation_timestamp": "2025-08-29T18:50:24.837252",
  "llm_model": "gpt-3.5-turbo"
}